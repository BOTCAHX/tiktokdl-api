// Generated by CoffeeScript 2.7.0
(function() {
  var Koa, Router, app, bodyParser, logger, port, ratelimit, responseTime, router, scraper, serve;

  process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';

  Koa = require('koa');

  Router = require('koa-router');

  bodyParser = require('koa-bodyparser');

  serve = require('koa-static');

  logger = require('koa-logger');

  responseTime = require('koa-response-time');

  ratelimit = require('koa-ratelimit');

  scraper = require('btch-downloader');

  app = new Koa();

  router = new Router();

  port = process.env.PORT || 3000;

  app.use(serve('public'));

  app.use(logger());

  app.use(responseTime());

  app.use(bodyParser());

  app.use(ratelimit({
    driver: 'memory',
    db: new Map(),
    duration: 1000 * 55,
    errorMessage: {
      ok: false,
      error: {
        code: 429,
        message: 'Rate limit exceeded. See "Retry-After"'
      }
    },
    id: function(ctx) {
      return ctx.ip;
    },
    headers: {
      remaining: 'Rate-Limit-Remaining',
      reset: 'Rate-Limit-Reset',
      total: 'Rate-Limit-Total'
    },
    max: 100
  }));

  router.get('/tiktok/api.php', function(ctx) {
    var urls;
    urls = ctx.request.query.url;
    return scraper.ttdl(urls).then(function(result) {
      var audio, video;
      ({audio, video} = result);
      return ctx.body = {audio, video};
    }).catch(function(error) {
      ctx.status = 500;
      return ctx.body = {
        error: 'Internal server error'
      };
    });
  });

  app.use(router.routes());

  app.listen(port, function() {
    console.log(`Server started on - http://localhost:${port}`);
    return console.log(`Port - ${port}`);
  });

}).call(this);
